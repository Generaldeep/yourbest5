swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /:userId/roster:
    x-swagger-router-controller: roster
      get:
        description: Returns the user's complete roster of teams
        operationId:
        responses:
      post:
        description: Creates a new team for the user's roster
        operationId:
        parameters:
          - name: team
            in: query
            description: The name of the team to create
            required: true
            type: string
        responses:
      delete:
        description: Deletes the user's specified teams
        operationId:
        parameters:
          - name: team
            in: query
            description: The name of the team to delete
            required: true
            type: string
        responses:
  /:userId/roster/:team:
    x-swagger-router-controller: roster
      get:
        description: Returns the user's specific team
        operationId:
        responses:
  /:userId/roster/:team/:position:
    x-swagger-router-controller: roster
      post:
        description: Adds one player to the user's team at the specified position
        operationId:
        parameters:
          - name: player
            in: query
            description: The player to add to the team
            required: true
            type: # TBD As a user, do I input the playerID or player name?
        responses:
      put:
        description: Switch out players within a user's team
        operationId:
        parameters:
          - name: player
            in: query
            description: The chosen player switching in place of the existing player
            required: true
            type: # TBD As a user, do I input the playerID or player name?
        responses:
  /:userId/roster/:team/result:
    x-swagger-router-controller: roster
      get:
        description: Returns the user's entire team +/- score
        operationId:
        responses:
  /:userId/roster/:team/:position/result:
    x-swagger-router-controller: roster
      get:
        description: Returns the specific players +/- score within the user's team
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
