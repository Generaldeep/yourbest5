swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  # USER ROSTER
  /users:
    x-swagger-router-controller: userRoster
    get:
      description: Returns the user's dashboard home page
      operationId: findUser
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: The user id that is logged in
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: user dashboard
          schema:
            $ref: '#/definitions/userResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /{userid}/team:
    x-swagger-router-controller: userRoster
    get:
      description: Returns the user's team
      operationId: findUserTeam
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: The user id that is logged in
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Returns a JSON object of the user's team
          schema:
            $ref: '#/definitions/teamResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Deletes the user's team
      operationId: deleteTeam
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: The user id that is logged in
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: Team deleted
          schema:
            $ref: '#/definitions/rosterResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /{userid}/team/player:
    x-swagger-router-controller: userRoster
    post:
      description: Add one player to the team
      operationId: addPlayerUserRoster
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: The user id that is logged in
          required: true
          type: integer
          format: int64
        - name: position
          in: query
          description: The position seeking to be placed into
          required: true
          type: string
        - in: body
          name: newPlayer
          description: New player to be added to the team
          required: true
          schema:
            $ref: '#/definitions/playerResponse'
      responses:
        200:
          description: Returns a JSON object of the user's team
          schema:
            $ref: '#/definitions/rosterResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      description: Replace a player in the team
      operationId: updatePlayer
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: The user id that is logged in
          required: true
          type: integer
          format: int64
        - name: position
          in: query
          description: The position seeking to be placed into
          required: true
          type: string
        - in: body
          name: newPlayer
          description: New player to be added to the team
          required: true
          schema:
            $ref: '#/definitions/playerResponse'
      responses:
        200:
          description: Returns a JSON object of the user's team
          schema:
            $ref: '#/definitions/playerResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /{userid}/team/score:
    x-swagger-router-controller: userRoster
    get:
      description: Returns the team's +/- score
      operationId: score
      produces:
        - application/json
      parameters:
        - name: userid
          in: path
          description: The user id that is logged in
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Returns the integer +/- score
          schema:
            $ref: '#/definitions/plusminusResponse'
        default:
            description: unexpected error
            schema:
              $ref: '#/definitions/ErrorResponse'
  /nba:
    x-swagger-router-controller: allNBA
    get:
      description: Returns all players from the database
      operationId: allPlayers
      produces:
        - application/json
      responses:
        200:
          description: Returns an  array of all the players within our database
          schema:
            type: array
            items:
              $ref: '#/definitions/playerResponse'
        default:
            description: unexpected error
            schema:
              $ref: '#/definitions/ErrorResponse'
    post:
      description: Creates a new player within the database
      operationId: addPlayerNbaDB
      produces:
        - application/json
      parameters:
        - name: player
          in: body
          description: new player being added to the database
          required: false
          schema:
            $ref: '#/definitions/playerResponse'
      responses:
        200:
          description: returns the new player being added
          schema:
            $ref: '#/definitions/playerResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /nba/{playerid}:
    x-swagger-router-controller: allNBA
    get:
      description: Returns a specific player from the database
      operationId: onePlayer
      produces:
        - application/json
      parameters:
        - name: playerid
          in: path
          description: The player id being searched for
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Returns an  array of all the players within our database
          schema:
              $ref: '#/definitions/playerResponse'
        default:
          description: unexpected error
          schema:
              $ref: '#/definitions/ErrorResponse'
  /nba/rankings/stats:
    x-swagger-router-controller: allNBA
    get:
      description: Returns the rankings for a certain stat
      operationId: statRankings
      produces:
        - application/json
      parameters:
        - name: stat
          in: query
          description: The stat being searched for
          required: true
          type: string
      responses:
        200:
          description: Returns an array of all the stats in order
          schema:
            type: array
            items:
              $ref: '#/definitions/statResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /nba/rankings/{position}:
    x-swagger-router-controller: allNBA
    get:
      description: Returns the rankings for a certain position
      operationId: playerPositionRankings
      produces:
        - application/json
      parameters:
        - name: position
          in: path
          description: The position being searched for
          required: true
          type: string
      responses:
        200:
          description: Returns an array of all the most picked players for that position
          schema:
            type: array
            items:
              $ref: '#/definitions/playerResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  userResponse:
    required:
      - id
      - first_name
      - last_name
    type: object
    properties:
      id:
        type: integer
        format: int64
      first_name:
        type: string
      last_name:
        type: string
      team_id:
        type: integer
        format: int64
  statResponse:
    required:
      - name
    type: object
    properties:
      name:
        type: string
      result:
        type: integer
        format: int64
  plusminusResponse:
    required:
      - score
    properties:
      score:
        type: integer
        format: int64
  playerResponse:
    required:
      - name
      - id
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      image:
        type: string
      ppg:
        type: integer
        format: int64
      apg:
        type: integer
        format: int64
      fgp:
        type: integer
        format: int64
      ftp:
        type: integer
        format: int64
      rpg:
        type: integer
        format: int64
      bpg:
        type: integer
        format: int64
      spg:
        type: integer
        format: int64
      tpg:
        type: integer
        format: int64
  rosterResponse:
    required:
      - id
      - name
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  teamResponse:
    type: object
    properties:
      PG:
        type: object
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
          image:
            type: string
          ppg:
            type: integer
            format: int64
          apg:
            type: integer
            format: int64
          fgp:
            type: integer
            format: int64
          ftp:
            type: integer
            format: int64
          rpg:
            type: integer
            format: int64
          bpg:
            type: integer
            format: int64
          spg:
            type: integer
            format: int64
          tpg:
            type: integer
            format: int64
      SG:
        type: object
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
          image:
            type: string
          ppg:
            type: integer
            format: int64
          apg:
            type: integer
            format: int64
          fgp:
            type: integer
            format: int64
          ftp:
            type: integer
            format: int64
          rpg:
            type: integer
            format: int64
          bpg:
            type: integer
            format: int64
          spg:
            type: integer
            format: int64
          tpg:
            type: integer
            format: int64
      SF:
        type: object
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
          image:
            type: string
          ppg:
            type: integer
            format: int64
          apg:
            type: integer
            format: int64
          fgp:
            type: integer
            format: int64
          ftp:
            type: integer
            format: int64
          rpg:
            type: integer
            format: int64
          bpg:
            type: integer
            format: int64
          spg:
            type: integer
            format: int64
          tpg:
            type: integer
            format: int64
      PF:
        type: object
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
          image:
            type: string
          ppg:
            type: integer
            format: int64
          apg:
            type: integer
            format: int64
          fgp:
            type: integer
            format: int64
          ftp:
            type: integer
            format: int64
          rpg:
            type: integer
            format: int64
          bpg:
            type: integer
            format: int64
          spg:
            type: integer
            format: int64
          tpg:
            type: integer
            format: int64
      C:
        type: object
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
          image:
            type: string
          ppg:
            type: integer
            format: int64
          apg:
            type: integer
            format: int64
          fgp:
            type: integer
            format: int64
          ftp:
            type: integer
            format: int64
          rpg:
            type: integer
            format: int64
          bpg:
            type: integer
            format: int64
          spg:
            type: integer
            format: int64
          tpg:
            type: integer
            format: int64
